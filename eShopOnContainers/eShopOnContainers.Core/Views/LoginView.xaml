<?xml version="1.0" encoding="utf-8" ?>
<ContentPage    xmlns="http://xamarin.com/schemas/2014/forms"
                xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
                x:Class="eShopOnContainers.Core.Views.LoginView"
                xmlns:viewModelBase="clr-namespace:eShopOnContainers.Core.ViewModels.Base;assembly=eShopOnContainers.Core"
                xmlns:animations="clr-namespace:eShopOnContainers.Core.Animations;assembly=eShopOnContainers.Core"
                xmlns:converters="clr-namespace:eShopOnContainers.Core.Converters;assembly=eShopOnContainers.Core"
                xmlns:triggers="clr-namespace:eShopOnContainers.Core.Triggers;assembly=eShopOnContainers.Core"
                xmlns:behaviors="clr-namespace:eShopOnContainers.Core.Behaviors;assembly=eShopOnContainers.Core"
                xmlns:xct="http://xamarin.com/schemas/2020/toolkit"
                xmlns:viewmodels="clr-namespace:eShopOnContainers.Core.ViewModels"
                viewModelBase:ViewModelLocator.AutoWireViewModel="true"
                x:DataType="viewmodels:LoginViewModel"
                Shell.FlyoutBehavior="Disabled"
                Shell.NavBarIsVisible="False"
                Shell.TabBarIsVisible="False"
                BackgroundColor="#191919"
                Shell.BackgroundColor="#191919"
                Shell.ForegroundColor="White">
    <ContentPage.Title>
        <OnPlatform x:TypeArguments="x:String">
            <On Platform="iOS, UWP, WinRT, WinPhone" Value="eShop on Containers" />
        </OnPlatform>
    </ContentPage.Title>
    <ContentPage.Resources>
        <ResourceDictionary>
            <converters:FirstValidationErrorConverter x:Key="FirstValidationErrorConverter" />
            <converters:WebNavigatingEventArgsConverter x:Key="WebNavigatingEventArgsConverter" />
            <converters:WebNavigatedEventArgsConverter x:Key="WebNavigatedEventArgsConverter" />
            
            <Style x:Key="TitleLabelStyle"
                TargetType="{x:Type Label}">
                <Setter Property="FontFamily"
                    Value="{StaticResource MontserratRegular}" />
                <Setter Property="FontAttributes"
                    Value="Bold" />
                <Setter Property="FontSize"
                    Value="{StaticResource MediumSize}" />
                <Setter Property="HorizontalOptions"
                    Value="Center" />
                <Setter Property="Margin"
                    Value="0, 12" />
                <Setter Property="TextColor"
                        Value="White"/>
            </Style>

            <Style x:Key="HeaderLabelStyle"
                TargetType="{x:Type Label}">
                <Setter Property="FontFamily"
                    Value="{StaticResource MontserratRegular}" />
                <Setter Property="FontSize"
                    Value="{StaticResource LittleSize}" />
                <Setter Property="TextColor"
                    Value="{StaticResource GreenColor}" />
                <Setter Property="HorizontalOptions"
                    Value="Start" />
            </Style>

            <Style x:Key="LoginButtonStyle"
                TargetType="{x:Type Label}">
                <Setter Property="FontFamily"
                    Value="{StaticResource MontserratRegular}" />
                <Setter Property="TextColor"
                    Value="{StaticResource WhiteColor}" />
                <Setter Property="HorizontalOptions"
                    Value="Center" />
                <Setter Property="VerticalOptions"
                    Value="Center" />
            </Style>

            <Style x:Key="LoginPanelStyle"
                TargetType="{x:Type Grid}">
                <Setter Property="HeightRequest"
                    Value="60" />
                <Setter Property="BackgroundColor"
                    Value="{StaticResource LightGreenColor}" />
                <Setter Property="HorizontalOptions"
                    Value="FillAndExpand" />
                <Setter Property="VerticalOptions"
                    Value="FillAndExpand" />
            </Style>

            <Style x:Key="RegisterPanelStyle"
                TargetType="{x:Type Grid}"
                BasedOn="{StaticResource LoginPanelStyle}">
                <Setter Property="BackgroundColor"
                    Value="{StaticResource GreenColor}" />
            </Style>

            <Style x:Key="SettingsPanelStyle"
                TargetType="{x:Type Grid}"
                BasedOn="{StaticResource LoginPanelStyle}">
                <Setter Property="BackgroundColor"
                    Value="{StaticResource BlackColor}" />
            </Style>

            <Style x:Key="SettingsImageStyle"
                TargetType="{x:Type Image}">
                <Setter Property="Margin"
                    Value="12" />
            </Style>
            
            <animations:StoryBoard
              x:Key="LoginAnimation"
              Target="{x:Reference LoginPanel}">
                <animations:FadeInAnimation
                    Direction="Up"
                    Duration="1500" />
            </animations:StoryBoard>

        </ResourceDictionary>
    </ContentPage.Resources>
    <ContentPage.Triggers>
        <EventTrigger
            Event="Appearing">
            <triggers:BeginAnimation
                Animation="{StaticResource LoginAnimation}" />
        </EventTrigger>
    </ContentPage.Triggers>
    <Frame BackgroundColor="#191919" BorderColor="Gray" CornerRadius="10" HorizontalOptions="Center" Margin="0,10" HeightRequest="600" WidthRequest="280">
        <Grid>
        <!-- MOCK AUTH -->
        <Grid
            x:Name="LoginPanel"
            IsVisible="{Binding IsMock}"
            Padding="0"
            ColumnSpacing="0"
            RowSpacing="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="60" />
            </Grid.RowDefinitions>
            <!-- LOGIN / REGISTER / SETTINGS -->
            
            <!-- INFO -->
            <Label
              Grid.Row="1"
              Text="GİRİŞ YAPIN"
              Style="{StaticResource TitleLabelStyle}"/>
            <!-- LOGIN FORM -->
            <StackLayout   
                Grid.Row="3"
                Margin="24">
                
                <Entry Text="{Binding UserName.Value, Mode=TwoWay}">
					<Entry.Style>
                        <OnPlatform x:TypeArguments="Style">
                            <On Platform="iOS, Android" Value="{StaticResource EntryStyle}" />
                            <On Platform="UWP, WinRT, WinPhone" Value="{StaticResource UwpEntryStyle}" />
                        </OnPlatform>
                    </Entry.Style>
                    <Entry.Behaviors>
						<xct:EventToCommandBehavior
							EventName="TextChanged"
							Command="{Binding ValidateUserNameCommand}" />
					</Entry.Behaviors>
					<Entry.Triggers>
						<DataTrigger 
							TargetType="Entry"
							Binding="{Binding UserName.IsValid}"
							Value="False">
							<Setter Property="behaviors:LineColorBehavior.LineColor" Value="{StaticResource ErrorColor}" />
						</DataTrigger>
					</Entry.Triggers>
                </Entry>
                <Label 
					Text="{Binding UserName.Errors, Converter={StaticResource FirstValidationErrorConverter}}"
					Style="{StaticResource ValidationErrorLabelStyle}" />
                <Entry
                  IsPassword="True"
                  Text="{Binding Password.Value, Mode=TwoWay}">
                    <Entry.Style>
                        <OnPlatform x:TypeArguments="Style">
                            <On Platform="iOS, Android" Value="{StaticResource EntryStyle}" />
                            <On Platform="UWP, WinRT, WinPhone" Value="{StaticResource UwpEntryStyle}" />
                        </OnPlatform>
                    </Entry.Style>
					<Entry.Behaviors>
						<xct:EventToCommandBehavior
							EventName="TextChanged"
							Command="{Binding ValidatePasswordCommand}" />
					</Entry.Behaviors>
					<Entry.Triggers>
						<DataTrigger 
							TargetType="Entry"
							Binding="{Binding Password.IsValid}"
							Value="False">
							<Setter Property="behaviors:LineColorBehavior.LineColor" Value="{StaticResource ErrorColor}" />
						</DataTrigger>
					</Entry.Triggers>
                </Entry>
				<Label 
					Text="{Binding Password.Errors, Converter={StaticResource FirstValidationErrorConverter}}"
					Style="{StaticResource ValidationErrorLabelStyle}" />
                    <Label HorizontalOptions="Center" TextColor="Gray">Şifremi Unuttum</Label>
                    <Label TextColor="White">-------------------------------------------------------</Label>
                    <Label TextColor="White" HorizontalOptions="Center" FontSize="20">Hemen Üye Ol</Label>
                    <Label TextColor="White" HorizontalOptions="Center" FontSize="9" >Mediamart.com.tr üyesi olarak tüm kapmanyalarımızdan</Label>
                    <Label TextColor="White" HorizontalOptions="Center" FontSize="9" Margin="0,-7">haberdar olur, üyelere özel indirim fırsatlarımızdan</Label>
                    <Label TextColor="White" HorizontalOptions="Center" FontSize="9" Margin="0,0">faydalanabilirsin</Label>
                    <Button CornerRadius="10" VerticalOptions="Center" Text="Hemen Üye Ol" BackgroundColor="Green"/>
                    <Label TextColor="White">-------------------------------------------------------</Label>
                    <Label TextColor="White" HorizontalOptions="Center" FontSize="20">CLUB Kartınızı Kaydedin</Label>
                    <Label TextColor="White" HorizontalOptions="Center" FontSize="9" >Mediamart CLUB'a mağazalarımızdan üye olduysanız, şifre</Label>
                    <Label TextColor="White" HorizontalOptions="Center" FontSize="9" Margin="0,-7">belirleyerek CLUB avantajlarınızı we sitemiz de</Label>
                    <Label TextColor="White" HorizontalOptions="Center" FontSize="9" Margin="0,0">kullanabilirsiniz</Label>
                    <Button CornerRadius="10" VerticalOptions="Center" Text="CLUB Kartınızı Kaydedin" BackgroundColor="Red"/>
                    <Label TextColor="White">-------------------------------------------------------</Label>
                </StackLayout>
            <Frame CornerRadius="16" HasShadow="False" Padding="0" IsClippedToBounds="True"
                   HorizontalOptions="Center"
                   Grid.Row="2" >
                
            </Frame>
            
            <!-- LOGIN BUTTON -->
            <Grid
                BackgroundColor="Black"
                Padding="0"
                ColumnSpacing="0"
                RowSpacing="0"
                Grid.Row="4"
                >
                <Label
                  Text="GİRİŞ"
                  Style="{StaticResource LoginButtonStyle}"/>
                <Grid.GestureRecognizers>
                    <TapGestureRecognizer
                        Command="{Binding MockSignInCommand}"
                        NumberOfTapsRequired="1" />
                </Grid.GestureRecognizers>
            </Grid>
        </Grid>
            
            <!-- AUTH -->
        <Grid
          ColumnSpacing="0"
          RowSpacing="0"
          IsVisible="{Binding IsMock, Converter={StaticResource InverseBoolConverter}}">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="60" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition />
                <ColumnDefinition Width="64" />
            </Grid.ColumnDefinitions>
            <!-- BANNER -->
            
            <Image
                x:Name="Banner"
                Grid.Row="0"
                Grid.Column="0"
                Grid.ColumnSpan="3"
                Aspect="AspectFill"
                Source="banner.png">
            </Image>
            <Grid
                Grid.Row="0"
                Grid.Column="0"
                Grid.ColumnSpan="3"
                BackgroundColor="{StaticResource BlackColor}"
                Opacity="0.5"/>
            <!-- LOG IN BUTTON -->
            <Grid
                Grid.Column="0"
                Grid.Row="1"
                Style="{StaticResource LoginPanelStyle}">
                <Label
                  Text="[ LOGIN ]"
                  Style="{StaticResource LoginButtonStyle}"/>
                <Grid.GestureRecognizers>
                    <TapGestureRecognizer
                        Command="{Binding SignInCommand}"
                        NumberOfTapsRequired="1" />
                </Grid.GestureRecognizers>
            </Grid>
            <!-- REGISTER BUTTON -->
            <Grid
                Grid.Column="1"
                Grid.Row="1"
                Style="{StaticResource RegisterPanelStyle}">
                <Label
                  Text="[ REGISTER ]"
                  Style="{StaticResource LoginButtonStyle}"/>
                <Grid.GestureRecognizers>
                    <TapGestureRecognizer
                        Command="{Binding RegisterCommand}"
                        NumberOfTapsRequired="1" />
                </Grid.GestureRecognizers>
            </Grid>
            <!-- SETTINGS -->
            <Grid
                Grid.Column="2"
                Grid.Row="1"
                Style="{StaticResource SettingsPanelStyle}">
                <Image Style="{StaticResource SettingsImageStyle}" Source="{StaticResource SettingsIconLightImageSource}" />
                <Grid.GestureRecognizers>
                    <TapGestureRecognizer
                        Command="{Binding SettingsCommand}"
                        NumberOfTapsRequired="1" />
                </Grid.GestureRecognizers>
            </Grid>
            <!-- WEBVIEW -->
            <WebView     
                Source="{Binding LoginUrl}"
                Grid.Column="0"
                Grid.ColumnSpan="3"
                Grid.Row="0"
                Grid.RowSpan="2"
                IsVisible="{Binding IsLogin}">
                <WebView.Behaviors>
                    <xct:EventToCommandBehavior 
                        EventName="Navigating"
                        EventArgsConverter="{StaticResource WebNavigatingEventArgsConverter}"
                        Command="{Binding NavigateCommand}" />
                </WebView.Behaviors>
            </WebView>
        </Grid>
        <!-- INDICATOR -->
        <ActivityIndicator      
          Color="{StaticResource LightGreenColor}"
          IsRunning="{Binding IsBusy}"
          IsVisible="{Binding IsBusy}"
          VerticalOptions="Center"
          HorizontalOptions="Center">
            <ActivityIndicator.WidthRequest>
                <OnPlatform x:TypeArguments="x:Double">
                    <On Platform="iOS, Android" Value="100" />
                    <On Platform="UWP, WinRT, WinPhone" Value="400" />
                </OnPlatform>
            </ActivityIndicator.WidthRequest>
        </ActivityIndicator>
    </Grid>
        
    </Frame>
</ContentPage>
